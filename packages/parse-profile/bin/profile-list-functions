#!/usr/bin/env node

'use strict';
// tslint:disable:no-console
// tslint:disable:variable-name

const ui = require('commander');
const fs = require('fs');
const Profile = require('../dist/index.cjs');

ui
  .option('-f, --file <file>', 'Path to trace json file')
  .option('-l, --locations', 'include locations in names')
  .parse(process.argv);

const {
  file,
  locations
} = ui;
const defaultProfilePath = `${process.cwd()}/profile.json`;

if (file === undefined && fs.existsSync(defaultProfilePath) === false) {
  Profile.showError('You must pass a path to the trace file');
  process.exit(1);
}

const filePath = file || defaultProfilePath;
const traceEvents = JSON.parse(fs.readFileSync(filePath, 'utf8'));
const trace = Profile.loadTrace(traceEvents.traceEvents);
const profile = trace.cpuProfile(-1, -1);
const methods = new Set();

if (locations) {
  profile.nodes.forEach(node => {
    const {
      functionName,
      url,
      lineNumber,
      columnNumber
    } = node.callFrame;

    methods.add(`${url}:${lineNumber}:${columnNumber}.${normalizeFnName(functionName)}`);
  });
} else {
  profile.nodes.forEach(node => {
    methods.add(normalizeFnName(node.callFrame.functionName))
  });
}
methods.forEach(method => console.log(method));

function normalizeFnName(name) {
  if (name === '') {
    name = '(anonymous)';
  }
  return name;
}