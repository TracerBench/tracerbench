#!/usr/bin/env node

'use strict';
// tslint:disable:no-console
// tslint:disable:variable-name

const chalk = require('chalk');
const program = require('commander');
const fs = require('fs');
const SilentError = require('silent-error');
const Profile = require('../dist/index.cjs');
const error = chalk.bold.red;

program
  .option('-f, --file <file>', 'Path to trace json file')
  .parse(process.argv);

const {
  file
} = program;
const defaultProfilePath = `${process.cwd()}/profile.json`;
if (file === undefined && fs.existsSync(defaultProfilePath) === false) {
  throw new SilentError(error(`Error: Must pass a path to the trace file ðŸ’£`));
}

const filePath = file || defaultProfilePath;
const traceEvents = JSON.parse(fs.readFileSync(filePath, 'utf8'));
const trace = Profile.loadTrace(traceEvents);

let totalDuration = 0;

trace.events
  .filter(event => event.name === 'ParseAuthorStyleSheet')
  .filter(event => event.args.data.styleSheetUrl)
  .forEach(event => {
    const url = event.args.data.styleSheetUrl;
    const durationInMs = (event.dur / 1000);
    totalDuration += durationInMs;
    console.log(`${url}: ${durationInMs.toFixed(2)}`);
  });
console.log(`Total Duration = ${totalDuration.toFixed(2)}ms`);